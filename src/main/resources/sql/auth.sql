--资源表
CREATE TABLE RESOURCE (
    ID INT NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(50) NOT NULL,
    IDENTIFIER VARCHAR(30) NOT NULL,
    DESCRIPTION VARCHAR(50),
    ICON VARCHAR(50),
    TYPE INT NOT NULL,
    URL VARCHAR(50),
    PID INT,
    SORT INTEGER DEFAULT 0,
    DELETED TINYINT,
    PRIMARY KEY (ID)
);
ALTER TABLE RESOURCE ADD CONSTRAINT FK_PID FOREIGN KEY(PID) REFERENCES RESOURCE(ID) ON DELETE CASCADE;

--权限
CREATE TABLE PRIVILEGE (
    ID INT NOT NULL AUTO_INCREMENT,
    RESOURCE_ID INT NOT NULL,
    OPERATION_ID INT NOT NULL,
    DESCRIPTION VARCHAR(50),
    PRIMARY KEY (ID),
    FOREIGN KEY FK_RESOURCE_ID (RESOURCE_ID) REFERENCES RESOURCE(ID) ON DELETE CASCADE,
    FOREIGN KEY FK_OPERATION_ID (OPERATION_ID) REFERENCES OPERATION(ID) ON DELETE CASCADE,
    UNIQUE KEY UK_RES_OPE (RESOURCE_ID, OPERATION_ID)
);

--权限操作
CREATE TABLE OPERATION (
    ID INT NOT NULL AUTO_INCREMENT,
    CODE VARCHAR(30) NOT NULL,
    DESCRIPTION VARCHAR(50),
    PRIMARY KEY (ID),
    UNIQUE KEY UK_CODE (CODE)
);

--登录用户
CREATE TABLE USER (
    ID INT NOT NULL AUTO_INCREMENT,
    USER_NAME VARCHAR(20) NOT NULL,
    PASSWORD CHAR(36) NOT NULL,
    EMAIL VARCHAR(30),
    SALT VARCHAR(10) NOT NULL,
    ICON VARCHAR(20),
    CREATE_TIME TIMESTAMP NOT NULL,
    LAST_VISIT_TIME TIMESTAMP NOT NULL,
    CURRENT_LOGIN_COUNT INT,
    STATE INT,
    PRIMARY KEY (ID)
);

--角色
CREATE TABLE ROLE (
    ID INT NOT NULL AUTO_INCREMENT,
    NAME VARCHAR(20) NOT NULL,
    CODE VARCHAR(20) NOT NULL,
    DESCRIPTION VARCHAR(30),
    SORT INT NOT NULL DEFAULT 0,
    PRIMARY KEY (ID)
);

--用户角色
CREATE TABLE USER_ROLE (
    ID INT NOT NULL AUTO_INCREMENT,
    USER_ID INT NOT NULL,
    ROLE_ID INT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY FK_USER_ROLE_USERID (USER_ID) REFERENCES USER(ID) ON DELETE CASCADE,
    FOREIGN KEY FK_USER_ROLE_ROLEID (ROLE_ID) REFERENCES ROLE(ID) ON DELETE CASCADE
);

--角色权限
CREATE TABLE ROLE_PRIVILEGE (
    ID INT NOT NULL AUTO_INCREMENT,
    ROLE_ID INT NOT NULL,
    PRIVILEGE_ID INT NOT NULL,
    PRIMARY KEY (ID),
    FOREIGN KEY FK_ROLE_PRIVILEGE_ROLEID (ROLE_ID) REFERENCES ROLE(ID) ON DELETE CASCADE,
    FOREIGN KEY FK_ROLE_PRIVILEGE_PRIVID (PRIVILEGE_ID) REFERENCES PRIVILEGE(ID) ON DELETE CASCADE
);